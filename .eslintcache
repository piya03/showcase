[{"/Users/cepl/practice/showcase/src/reportWebVitals.js":"1","/Users/cepl/practice/showcase/src/index.js":"2","/Users/cepl/practice/showcase/src/App.js":"3","/Users/cepl/practice/showcase/src/TestPaper/Paper.js":"4","/Users/cepl/practice/showcase/src/CommonComponent/CommonCheckBox.js":"5","/Users/cepl/practice/showcase/src/UserForm/UserForm.js":"6","/Users/cepl/practice/showcase/src/Context/ComponentA.js":"7","/Users/cepl/practice/showcase/src/Context/ComponentB.js":"8","/Users/cepl/practice/showcase/src/Context/ComponentC.js":"9","/Users/cepl/practice/showcase/src/Hooks/useInput.js":"10","/Users/cepl/practice/showcase/src/Link/Links.js":"11","/Users/cepl/practice/showcase/src/StudentDashboard/StudentDashboard.js":"12","/Users/cepl/practice/showcase/src/StudentDashboard/ServerData.js":"13"},{"size":362,"mtime":1611057213381,"results":"14","hashOfConfig":"15"},{"size":500,"mtime":1611057213379,"results":"16","hashOfConfig":"15"},{"size":739,"mtime":1612286209646,"results":"17","hashOfConfig":"15"},{"size":1279,"mtime":1611067361581,"results":"18","hashOfConfig":"15"},{"size":358,"mtime":1611059363620,"results":"19","hashOfConfig":"15"},{"size":1331,"mtime":1611921237922,"results":"20","hashOfConfig":"15"},{"size":399,"mtime":1612284560203,"results":"21","hashOfConfig":"15"},{"size":208,"mtime":1611977778277,"results":"22","hashOfConfig":"15"},{"size":257,"mtime":1612284612197,"results":"23","hashOfConfig":"15"},{"size":330,"mtime":1611920521681,"results":"24","hashOfConfig":"15"},{"size":468,"mtime":1612285859527,"results":"25","hashOfConfig":"15"},{"size":2034,"mtime":1612333474029,"results":"26","hashOfConfig":"15"},{"size":436,"mtime":1612286886148,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jigx8w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cepl/practice/showcase/src/reportWebVitals.js",[],["57","58"],"/Users/cepl/practice/showcase/src/index.js",[],["59","60"],"/Users/cepl/practice/showcase/src/App.js",["61","62","63","64"],"/Users/cepl/practice/showcase/src/TestPaper/Paper.js",[],"/Users/cepl/practice/showcase/src/CommonComponent/CommonCheckBox.js",[],"/Users/cepl/practice/showcase/src/UserForm/UserForm.js",["65","66","67","68","69","70","71"],"import React, { useState } from \"react\";\nimport useInput from \"../Hooks/useInput\";\nconst UserForm = () => {\n  const [FirstName, bindFirstName, resetFirstName] = useInput(\"\");\n  const [lastName, bindLastName, resetLastName] = useInput(\"\");\n  const [address, bindAddress, resetAddress] = useInput(\"\");\n  const [pincode, bindPincode, resetPincode] = useInput(\"\");\n\n  function onSubmitHandle(e) {\n    e.preventDefault();\n    alert(`Hello ${FirstName} ${lastName}`);\n    // resetFirstName();\n    // resetLastName();\n    // resetAddress();\n    // resetPincode();\n  }\n  return (\n    <div>\n      <form onSubmit={onSubmitHandle}>\n        <div>\n          <label htmlFor=\"\">First Name</label>\n          <input type=\"text\" {...bindFirstName} />\n        </div>\n        <div>\n          <label htmlFor=\"\">last Name</label>\n          <input type=\"text\" {...bindLastName} />\n        </div>\n\n        {/* ///////////// */}\n        <div>\n          <label htmlFor=\"\">Address</label>\n          <input type=\"text\" {...bindAddress} />\n        </div>\n        {/* //////////////// */}\n        <div>\n          <label htmlFor=\"\">PinCode</label>\n          <input type=\"text\" {...bindPincode} />\n        </div>\n        <button type=\"submit\" onClick={onSubmitHandle}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserForm;\n","/Users/cepl/practice/showcase/src/Context/ComponentA.js",["72"],"/Users/cepl/practice/showcase/src/Context/ComponentB.js",[],"/Users/cepl/practice/showcase/src/Context/ComponentC.js",[],"/Users/cepl/practice/showcase/src/Hooks/useInput.js",[],"/Users/cepl/practice/showcase/src/Link/Links.js",[],"/Users/cepl/practice/showcase/src/StudentDashboard/StudentDashboard.js",["73"],"/Users/cepl/practice/showcase/src/StudentDashboard/ServerData.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"85","line":7,"column":3,"nodeType":"82","messageId":"83","endLine":7,"endColumn":12},{"ruleId":"80","severity":1,"message":"86","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"87","line":4,"column":36,"nodeType":"82","messageId":"83","endLine":4,"endColumn":50},{"ruleId":"80","severity":1,"message":"88","line":5,"column":34,"nodeType":"82","messageId":"83","endLine":5,"endColumn":47},{"ruleId":"80","severity":1,"message":"89","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":17},{"ruleId":"80","severity":1,"message":"90","line":6,"column":32,"nodeType":"82","messageId":"83","endLine":6,"endColumn":44},{"ruleId":"80","severity":1,"message":"91","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":17},{"ruleId":"80","severity":1,"message":"92","line":7,"column":32,"nodeType":"82","messageId":"83","endLine":7,"endColumn":44},{"ruleId":"80","severity":1,"message":"93","line":6,"column":16,"nodeType":"82","messageId":"83","endLine":6,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":14,"column":6,"nodeType":"96","endLine":14,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'useParams' is defined but never used.","'Paper' is defined but never used.","'resetFirstName' is assigned a value but never used.","'resetLastName' is assigned a value but never used.","'address' is assigned a value but never used.","'resetAddress' is assigned a value but never used.","'pincode' is assigned a value but never used.","'resetPincode' is assigned a value but never used.","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.","ArrayExpression",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [data]",{"range":"103","text":"104"},[337,339],"[data]"]